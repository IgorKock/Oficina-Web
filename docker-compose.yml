version: "3.8"

services:
  # Serviço para o banco de dados MariaDB
  db:
    image: mariadb:11.8 # Use uma versão específica do MariaDB (10.6 ou 11.8 conforme preferir)
    restart: always # Garante que o container reinicie automaticamente
    environment:
      MYSQL_ROOT_PASSWORD: root_password # Altere esta senha para algo seguro em produção
      MYSQL_DATABASE: oficina_web # Nome do banco de dados que sua aplicação usará
      MYSQL_USER: user_app # Usuário do banco de dados para sua aplicação
      MYSQL_PASSWORD: password_app # Senha do usuário do banco de dados para sua aplicação
    volumes:
      - db_data:/var/lib/mysql # Persiste os dados do banco de dados
    # Healthcheck: Garante que o MariaDB está pronto antes da aplicação web tentar conectar.
    healthcheck:
      test: ["CMD", "mariadb-admin", "ping", "-h", "localhost", "-u", "user_app", "-puser_app"]
      interval: 10s # Verifica a cada 10 segundos
      timeout: 5s   # Espera 5 segundos pela resposta
      retries: 5    # Tenta 5 vezes antes de considerar falha
      start_period: 30s # Período inicial para o container subir antes de começar as verificações

  # Seu serviço da aplicação web (Flask)
  web:
    build: . # Constrói a imagem Docker a partir do Dockerfile no diretório atual
    image: igorkock/oficinaweb:latest # Nome da imagem Docker (opcional, mas bom para identificação)
    container_name: oficinaweb # Nome do container Docker
    ports:
      - "5000:5000" # Mapeia a porta 5000 do host para a porta 5000 do container
    networks:
      - oficina_network # Conecta-se à rede Docker definida abaixo
    # depends_on: Garante que o serviço 'db' esteja saudável antes de iniciar o 'web'
    depends_on:
      db:
        condition: service_healthy
    # links: Explicitamente adiciona o serviço 'db' ao /etc/hosts do container 'web'.
    # Isso pode ajudar em casos de falha na resolução de DNS interna do Docker.
    links:
      - db
    # Comando para iniciar sua aplicação Flask
    command: python3 run.py
    environment:
      # Configurações do banco de dados passadas como variáveis de ambiente para a aplicação Flask
      DB_USER: user_app
      DB_PASSWORD: password_app
      DB_HOST: db # 'db' é o nome do serviço do MariaDB dentro da rede Docker
      DB_NAME: oficina_web
      FLASK_APP: run.py # Necessário para comandos Flask (ex: flask db)
      FLASK_ENV: development # Define o ambiente Flask (development, production)
      SECRET_KEY: sua_chave_secreta_muito_segura # Chave secreta para sessões Flask

networks:
  oficina_network:
    driver: bridge # Define uma rede de bridge padrão para os serviços se comunicarem

# Definição do volume para persistência dos dados do banco de dados
volumes:
  db_data: # O Docker irá gerenciar este volume para persistir os dados do MariaDB